buildscript {
    ext { // ext란 build.gradle의 전역변수를 사용한다는 뜻
        springBootVersion = '2.1.9.RELEASE'
    }
    repositories{
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    //스프링프레임워크 관련
    implementation('org.springframework.boot:spring-boot-starter-web')
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine")

    //롬복
    implementation('org.projectlombok:lombok')

    //테스트 관련
    testImplementation ('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.springframework.security:spring-security-test")

    //Spring Data Jpa
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')

    //머스테치
    implementation('org.springframework.boot:spring-boot-starter-mustache')

    //소셜기능 구현시 클라이언트 입장에서 필요
    //org.springframework.boot:spring-boot-starter-oauth2-jose를 기본으로 관리해줌
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')

    //spring-session-jdbc 등록
    implementation('org.springframework.session:spring-session-jdbc')

    //테스트도구 사용
    testImplementation("org.springframework.security:spring-security-test")
}

test {
    useJUnitPlatform()
}